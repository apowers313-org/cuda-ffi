name: Build

on: [push]

# gh-pages needs write permissions
permissions:
        contents: write

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.7.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        make poetry-download
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Set up cache
      uses: actions/cache@v3.3.1
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install
    - name: Run safety checks
      run: |
        make check-safety

    - name: Run style checks
      run: |
        make check-codestyle

  build:
    needs: lint

    runs-on: cudaffi-gpu-runner

    strategy:
      matrix:
        # TODO: fix poetry install on mac and windows
        # os: [windows-latest, ubuntu-latest, macos-latest]
        os: [ubuntu-latest]
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.7.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up cache
      uses: actions/cache@v3.3.1
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

    - name: Install poetry
      run: |
        make poetry-download
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run tests
      run: |
        make test

    - name: Build coverage
      run: |
        make coverage

    - name: Publish Coverage
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        file: coverage.lcov

    - name: Docs build
      run: |
        make docs

    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: site
